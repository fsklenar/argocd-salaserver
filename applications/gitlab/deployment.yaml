# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: gitlab-config-pvc
#   labels:
#     app: gitlab
# spec:
#   storageClassName: "local-path"
#   accessModes:
#     - ReadWriteOnce # This access mode means the volume can be mounted as read-write by a single node.
#   resources:
#     requests:
#       storage: 1Gi # Adjust storage size as needed for your configuration files
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: gitlab-logs-pvc
#   labels:
#     app: gitlab
# spec:
#   storageClassName: "local-path"
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 5Gi # Adjust storage size as needed for your logs
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: gitlab-data-pvc
#   labels:
#     app: gitlab
# spec:
#   storageClassName: "local-path"
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 5Gi # Adjust storage size as needed for your GitLab data (repositories, database, etc.)
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: gitlab-backups-pvc
#   labels:
#     app: gitlab
# spec:
#   storageClassName: "local-path"
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 10Gi # Adjust storage size as needed for your GitLab backups
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: gitlab-deployment
#   labels:
#     app: gitlab
# spec:
#   replicas: 1 # Deploy a single instance of GitLab
#   selector:
#     matchLabels:
#       app: gitlab
#   strategy:
#     type: Recreate
#   template:
#     metadata:
#       labels:
#         app: gitlab
#     spec:
#       volumes:
#         # Volume for GitLab configuration
#         - name: gitlab-config
#           persistentVolumeClaim:
#             claimName: gitlab-config-pvc
#         # Volume for GitLab logs
#         - name: gitlab-logs
#           persistentVolumeClaim:
#             claimName: gitlab-logs-pvc
#         # Volume for GitLab data
#         - name: gitlab-data
#           persistentVolumeClaim:
#             claimName: gitlab-data-pvc
#         # Volume for GitLab backups
#         - name: gitlab-backups
#           persistentVolumeClaim:
#             claimName: gitlab-backups-pvc
#         # Volume for shared memory (shm-size 256m)
#         - name: shm-volume
#           emptyDir:
#             medium: Memory
#             sizeLimit: 256Mi # Equivalent to --shm-size 256m
#       containers:
#         - name: gitlab
#           image: gitlab/gitlab-ee:17.6.1-ee.0 # The Docker image you specified
#           ports:
#             - name: http
#               containerPort: 8080
#           env:
#             # Configure GitLab's external URL and SSH port
#             # This mimics the --hostname and --publish settings from your docker run command
#             - name: GITLAB_OMNIBUS_CONFIG
#               value: |
#                 nginx['listen_addresses'] = ['*', '[::]']
#                 external_url 'https://gitlab.linuxadmin.eu'
#                 # Add any other GitLab Omnibus configurations here, e.g., SMTP settings
#                 # gitlab_rails['smtp_enable'] = true
#                 # gitlab_rails['smtp_address'] = "smtp.example.com"
#                 # gitlab_rails['smtp_port'] = 587
#                 # gitlab_rails['smtp_authentication'] = "login"
#                 # gitlab_rails['smtp_user_name'] = "smtp_user"
#                 # gitlab_rails['smtp_password'] = "smtp_password"
#                 # gitlab_rails['smtp_domain'] = "example.com"
#                 # gitlab_rails['smtp_tls'] = true
#                 # gitlab_rails['smtp_pool'] = true
#           volumeMounts:
#             - name: gitlab-config
#               mountPath: /etc/gitlab
#             - name: gitlab-logs
#               mountPath: /var/log/gitlab
#             - name: gitlab-data
#               mountPath: /var/opt/gitlab
#             - name: gitlab-backups
#               mountPath: /mnt/backups # Mount point for backups
#             - name: shm-volume
#               mountPath: /dev/shm # Mount point for shared memory
#           resources:
#             requests:
#               cpu: "500m"
#               memory: "6Gi"
#             limits:
#               cpu: "4"
#               memory: "16Gi"
#           # readinessProbe:
#           #   httpGet:
#           #     path: /-/readiness
#           #     port: 8080
#           #   initialDelaySeconds: 180
#           #   periodSeconds: 10
#           #   timeoutSeconds: 10
#           #   failureThreshold: 3
#           # livenessProbe:
#           #   httpGet:
#           #     path: /-/liveness
#           #     port: http
#           #   initialDelaySeconds: 300
#           #   periodSeconds: 20
#           #   timeoutSeconds: 10
#           #   failureThreshold: 3
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: gitlab-service
#   labels:
#     app: gitlab
# spec:
#   selector:
#     app: gitlab
#   ports:
#     - protocol: TCP
#       port: 8080 # Service port for HTTP
#       targetPort: 8080 # Container port for HTTP
#   type: ClusterIP # Use ClusterIP for internal access within the cluster by default
#   # externalIPs:
#   #   - 10.192.168.202
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   annotations:
#     nginx.ingress.kubernetes.io/proxy-body-size: "0"
#   labels:
#     app.kubernetes.io/instance: gitlab
#   name: gitlab
#   namespace: gitlab
# spec:
#   ingressClassName: nginx
#   rules:
#   - host: gitlab.linuxadmin.eu
#     http:
#       paths:
#       - backend:
#           service:
#             name: gitlab-service
#             port:
#               number: 8080
#         path: /
#         pathType: Prefix
#
#


# # helm upgrade --install gitlab gitlab/gitlab --timeout 600s --namespace gitlab -f values.yaml
# # https://gitlab.com/gitlab-org/charts/gitlab
