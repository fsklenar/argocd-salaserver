apiVersion: batch/v1
kind: CronJob
metadata:
  name: cleanup-crashloopbackoff-pods
  namespace: monitoring # Change this to the namespace you want to target
spec:
  schedule: "*/10 * * * *" # Runs every 10 minutes
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: crashloop-cleaner # Use a dedicated ServiceAccount with permissions
          containers:
            - name: kubectl-pod-cleaner
              image: bitnamilegacy/kubectl:1.33.4
              command:
                - /bin/sh
                - -c
                - |
                  echo "Deleting CrashLoopBackOff pods..."
                  kubectl get pods --all-namespaces \
                    --field-selector=status.phase!=Running,status.phase!=Succeeded \
                    -o json | \
                  jq -r '.items[] | [.metadata.namespace, .metadata.name] | @tsv' | \
                  while IFS=$'\t' read ns  pod; do
                    echo "Deleting pod ${pod} in namespace ${ns}"
                    kubectl delete pod "${pod}" -n "${ns}"
                  done
          restartPolicy: OnFailure
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: crashloop-cleaner
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: crashloop-cleaner-role
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: crashloop-cleaner-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: crashloop-cleaner-role
subjects:
  - kind: ServiceAccount
    name: crashloop-cleaner
    namespace: monitoring
