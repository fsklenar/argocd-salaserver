kube-prometheus-stack:
  # nodeExporter:
  #   forceDeployDashboards: true
  prometheus:
    # ingress:
    #   enabled: true
    #   ingressClassName: nginx
    #   hosts:
    #   - prometheus-salaserver.linuxadmin.eu
    ingress:
      route:
        main:
          enabled: true
          apiVersion: gateway.networking.k8s.io/v1
          kind: HTTPRoute
          hostnames:
            - monitoring-kube-prometheus-prometheus
          parentRefs:
            - group: gateway.networking.k8s.io
              kind: Gateway
              name: cilium-gateway-https
              namespace: kube-system
    prometheusSpec:
      retention: 20d
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: local-storage
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 10Gi
  grafana:
    defaultDashboardsTimezone: Europe/Bratislava
    enabled: true
    defaultDashboardsEnabled: true
    defaultDashboardsEditable: true
    forceDeployDashboards: true
    forceDeployDatasources: true
    operator:
      dashboardsConfigMapRefEnabled: true
       matchLabels: { app: "grafana" }
    # ingress:
    #   enabled: true
    #   ingressClassName: nginx
    #   hosts:
    #   - grafana-salaserver.linuxadmin.eu
    # service:
    #   port: 3000
    #   externalIPs:
    #     - 10.192.168.202
    grafana.ini:
      server:
        domain: "k8smaster.local"
        root_url: "%(protocol)s://%(domain)s/"
        serve_from_sub_path: true
    persistence:
      enabled: true
      storageClassName: "local-storage"
      accessModes:
        - ReadWriteOnce
      size: 10Gi
      finalizers:
        - kubernetes.io/pvc-protection
  alertmanager:
    enabled: true
    forceDeployDashboards: true
    alertmanagerSpec:
      useExistingSecret: true
      configSecret: alertmanager-prometheus-kube-prometheus-alertmanager
      secrets:
        - alertmanager-prometheus-kube-prometheus-alertmanager
